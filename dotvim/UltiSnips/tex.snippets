priority 1

global !p
def delete_option_bracket():
	options = snip.tabstops[2].current_text
	if len(options) == 0 :
		prefix = re.sub(r"(.*)\[\].*", r"\1", snip.buffer[snip.line])
		kept = snip.tabstops[1].current_text
		snip.buffer[snip.line] = prefix + "{" + kept + "}"
		snip.cursor.set(snip.line, len(prefix)+2+len(kept))
endglobal

post_jump "if snip.tabstop == 0 : delete_option_bracket()"
snippet "\\doc?u?(ment)?(class)?" "document class" br
\documentclass[${2}]{${1:class}}$0
endsnippet

post_jump "if snip.tabstop == 0 : delete_option_bracket()"
snippet "\\?usep?(ackage)?" "use package" br
\usepackage[${2}]{${1:package}}$0
endsnippet

snippet "begi?n?" "begin{} / end{}" br
\begin{${1:whatever}}
	${0:${VISUAL}}
\end{$1}
endsnippet

snippet "docu?m?e?n?t?" "document environment" br
\begin{document}
${0:${VISUAL}}
\end{document}
endsnippet

snippet "(it)|(textit?)" "italic font" r
\textit{${1:${VISUAL}}}$0
endsnippet

snippet "(bf)|(textbf?)" "bold font" r
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet "(tt)|(texttt?)" "typewriter font" r
\texttt{${1:${VISUAL}}}$0
endsnippet

snippet "\\?sqr?t?" "\sqrt{}" r
\sqrt{${1:${VISUAL}}}$0
endsnippet

snippet "\\?left?([\(\[\{])" "\left \right" r
\left`!p matched = match.group(1)
snip.rv = matched if matched != "{" else "\{"` ${1} \right`!p
snip.rv = [")", "]", "\}"][["(", "[", "{"].index(matched)]`$0
endsnippet

priority 0

snippet "begi?n?( (\S+))?" "begin{something} / end{something}" br
\begin{${1:`!p
snip.rv = match.group(2) if match.group(1) is not None else "something"`}}
	${2:${VISUAL}}
\end{$1}$0
endsnippet
